{"ast":null,"code":"import { SET_LOGIN_MODAL_WINDOW, GET_USER_LOADING, GET_USER_LOADED, GET_USER_FAILURE, LOGIN_LOADING, LOGIN_SUCCESS, LOGIN_FAILURE } from '../redux/action-types';\nimport axios from 'axios';\nconst link = 'http://127.0.0.1:8000/api/';\nexport const setLoginModalWindow = data => ({\n  type: SET_LOGIN_MODAL_WINDOW,\n  payload: data\n});\nexport const getUser = () => (dispatch, getState) => {\n  dispatch({\n    type: GET_USER_LOADING\n  });\n  const token = getState().auth.token;\n\n  if (!token) {\n    return dispatch({\n      type: GET_USER_FAILURE\n    });\n  }\n\n  axios.post(`${link}accounts/user/`, null, {\n    headers: {\n      'Authorization': `token ${token}`,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => dispatch({\n    type: GET_USER_LOADED,\n    payload: res.data\n  }));\n};\nexport const login = data => dispatch => {\n  dispatch({\n    type: LOGIN_LOADING\n  });\n  axios.post(`${link}accounts/login/`, data).then(res => dispatch({\n    type: LOGIN_SUCCESS,\n    payload: res.data\n  })).catch(res => {\n    const errors = res.response.data;\n    const errorsObj = Object.values();\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: errorsObj\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/zcczz/Desktop/online_store_v2/online_store_v2/front/src/redux/actions.js"],"names":["SET_LOGIN_MODAL_WINDOW","GET_USER_LOADING","GET_USER_LOADED","GET_USER_FAILURE","LOGIN_LOADING","LOGIN_SUCCESS","LOGIN_FAILURE","axios","link","setLoginModalWindow","data","type","payload","getUser","dispatch","getState","token","auth","post","headers","then","res","login","catch","errors","response","errorsObj","Object","values"],"mappings":"AAAA,SACIA,sBADJ,EAEIC,gBAFJ,EAGIC,eAHJ,EAIIC,gBAJJ,EAKIC,aALJ,EAMIC,aANJ,EAOIC,aAPJ,QAQO,uBARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAG,4BAAb;AAEA,OAAO,MAAMC,mBAAmB,GAAGC,IAAI,KAAK;AACxCC,EAAAA,IAAI,EAAEX,sBADkC;AACVY,EAAAA,OAAO,EAAEF;AADC,CAAL,CAAhC;AAIP,OAAO,MAAMG,OAAO,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAEjDD,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;AAEA,QAAMe,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,KAA9B;;AAEA,MAAI,CAACA,KAAL,EAAY;AACR,WAAOF,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAf;AACH;;AAEDI,EAAAA,KAAK,CAACW,IAAN,CAAY,GAAEV,IAAK,gBAAnB,EAAoC,IAApC,EAA0C;AACtCW,IAAAA,OAAO,EAAE;AACL,uBAAkB,SAAQH,KAAM,EAD3B;AAEL,sBAAgB;AAFX;AAD6B,GAA1C,EAMKI,IANL,CAMUC,GAAG,IAAIP,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAET,eAAR;AAAyBU,IAAAA,OAAO,EAAES,GAAG,CAACX;AAAtC,GAAD,CANzB;AAOH,CAjBM;AAmBP,OAAO,MAAMY,KAAK,GAAGZ,IAAI,IAAII,QAAQ,IAAI;AAErCA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AAEAG,EAAAA,KAAK,CAACW,IAAN,CAAY,GAAEV,IAAK,iBAAnB,EAAqCE,IAArC,EACKU,IADL,CACUC,GAAG,IAAIP,QAAQ,CAAC;AAClBH,IAAAA,IAAI,EAAEN,aADY;AACGO,IAAAA,OAAO,EAAES,GAAG,CAACX;AADhB,GAAD,CADzB,EAIKa,KAJL,CAIWF,GAAG,IAAI;AACV,UAAMG,MAAM,GAAGH,GAAG,CAACI,QAAJ,CAAaf,IAA5B;AACA,UAAMgB,SAAS,GAAGC,MAAM,CAACC,MAAP,EAAlB;AACAd,IAAAA,QAAQ,CAAC;AACLH,MAAAA,IAAI,EAAEL,aADD;AACgBM,MAAAA,OAAO,EAAEc;AADzB,KAAD,CAAR;AAGH,GAVL;AAWH,CAfM","sourcesContent":["import {\r\n    SET_LOGIN_MODAL_WINDOW,\r\n    GET_USER_LOADING,\r\n    GET_USER_LOADED,\r\n    GET_USER_FAILURE,\r\n    LOGIN_LOADING,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE\r\n} from '../redux/action-types';\r\nimport axios from 'axios';\r\n\r\nconst link = 'http://127.0.0.1:8000/api/';\r\n\r\nexport const setLoginModalWindow = data => ({\r\n    type: SET_LOGIN_MODAL_WINDOW, payload: data\r\n})\r\n\r\nexport const getUser = () => (dispatch, getState) => {\r\n\r\n    dispatch({ type: GET_USER_LOADING })\r\n\r\n    const token = getState().auth.token;\r\n\r\n    if (!token) {\r\n        return dispatch({ type: GET_USER_FAILURE })\r\n    }\r\n\r\n    axios.post(`${link}accounts/user/`, null, {\r\n        headers: {\r\n            'Authorization': `token ${token}`,\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(res => dispatch({ type: GET_USER_LOADED, payload: res.data }))\r\n}\r\n\r\nexport const login = data => dispatch => {\r\n\r\n    dispatch({ type: LOGIN_LOADING })\r\n\r\n    axios.post(`${link}accounts/login/`, data)\r\n        .then(res => dispatch({\r\n            type: LOGIN_SUCCESS, payload: res.data\r\n        }))\r\n        .catch(res => {\r\n            const errors = res.response.data;\r\n            const errorsObj = Object.values()\r\n            dispatch({\r\n                type: LOGIN_FAILURE, payload: errorsObj\r\n            })\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}