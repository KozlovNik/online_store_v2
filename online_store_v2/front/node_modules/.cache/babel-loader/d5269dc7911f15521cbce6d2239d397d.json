{"ast":null,"code":"import { GET_USER_LOADING, GET_USER_LOADED, GET_USER_FAILURE, LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAILURE } from \"../action-types\";\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: false,\n  errors: [],\n  registerErrors: [],\n  user: null\n};\nexport default function auth(state = initialState, action) {\n  switch (action.type) {\n    case GET_USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n\n    case GET_USER_FAILURE:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        user: null\n      };\n\n    case REGISTER_FAILURE:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        errors: action.payload,\n        user: null\n      };\n\n    case LOGIN_FAILURE:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        errors: action.payload,\n        user: null\n      };\n\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token); // localStorage.setItem('token',payload.)\n\n      return { ...state,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        errors: null,\n        user: action.payload.user\n      };\n\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        errors: [],\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["C:/Users/zcczz/Desktop/online_store_v2/online_store_v2/front/src/redux/reducers/auth.js"],"names":["GET_USER_LOADING","GET_USER_LOADED","GET_USER_FAILURE","LOGIN_FAILURE","LOGIN_SUCCESS","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAILURE","initialState","token","localStorage","getItem","isAuthenticated","isLoading","errors","registerErrors","user","auth","state","action","type","payload","removeItem","setItem"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,eAFJ,EAGIC,gBAHJ,EAIIC,aAJJ,EAKIC,aALJ,EAMIC,cANJ,EAOIC,gBAPJ,EAQIC,gBARJ,QASO,iBATP;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,EAAAA,eAAe,EAAE,KAFA;AAGjBC,EAAAA,SAAS,EAAE,KAHM;AAIjBC,EAAAA,MAAM,EAAE,EAJS;AAKjBC,EAAAA,cAAc,EAAE,EALC;AAMjBC,EAAAA,IAAI,EAAE;AANW,CAArB;AASA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGV,YAAtB,EAAoCW,MAApC,EAA4C;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKpB,gBAAL;AACI,aAAO,EACH,GAAGkB,KADA;AAEHL,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ,SAAKZ,eAAL;AACI,aAAO,EACH,GAAGiB,KADA;AAEHN,QAAAA,eAAe,EAAE,IAFd;AAGHC,QAAAA,SAAS,EAAE,KAHR;AAIHG,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAJV,OAAP;;AAMJ,SAAKnB,gBAAL;AACIQ,MAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHT,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,SAAS,EAAE,KAJR;AAKHG,QAAAA,IAAI,EAAE;AALH,OAAP;;AAOJ,SAAKT,gBAAL;AACIG,MAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHT,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,SAAS,EAAE,KAJR;AAKHC,QAAAA,MAAM,EAAEK,MAAM,CAACE,OALZ;AAMHL,QAAAA,IAAI,EAAE;AANH,OAAP;;AAQJ,SAAKb,aAAL;AACIO,MAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHT,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,SAAS,EAAE,KAJR;AAKHC,QAAAA,MAAM,EAAEK,MAAM,CAACE,OALZ;AAMHL,QAAAA,IAAI,EAAE;AANH,OAAP;;AAQJ,SAAKZ,aAAL;AACA,SAAKE,gBAAL;AACII,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BJ,MAAM,CAACE,OAAP,CAAeZ,KAA7C,EADJ,CAEI;;AACA,aAAO,EACH,GAAGS,KADA;AAEHT,QAAAA,KAAK,EAAEU,MAAM,CAACE,OAAP,CAAeZ,KAFnB;AAGHG,QAAAA,eAAe,EAAE,IAHd;AAIHC,QAAAA,SAAS,EAAE,KAJR;AAKHC,QAAAA,MAAM,EAAE,IALL;AAMHE,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAAP,CAAeL;AANlB,OAAP;;AAQJ,SAAKX,cAAL;AACIK,MAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHT,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,SAAS,EAAE,KAJR;AAKHC,QAAAA,MAAM,EAAE,EALL;AAMHE,QAAAA,IAAI,EAAE;AANH,OAAP;;AAQJ;AACI,aAAOE,KAAP;AAjER;AAmEH;AAAA","sourcesContent":["import {\r\n    GET_USER_LOADING,\r\n    GET_USER_LOADED,\r\n    GET_USER_FAILURE,\r\n    LOGIN_FAILURE,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE\r\n} from \"../action-types\";\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    errors: [],\r\n    registerErrors: [],\r\n    user: null\r\n}\r\n\r\nexport default function auth(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case GET_USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            }\r\n        case GET_USER_FAILURE:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                user: null\r\n            }\r\n        case REGISTER_FAILURE:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                errors: action.payload,\r\n                user: null\r\n            }\r\n        case LOGIN_FAILURE:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                errors: action.payload,\r\n                user: null\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token)\r\n            // localStorage.setItem('token',payload.)\r\n            return {\r\n                ...state,\r\n                token: action.payload.token,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                errors: null,\r\n                user: action.payload.user\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                errors: [],\r\n                user: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}