{"ast":null,"code":"import { SET_LOGIN_MODAL_WINDOW, GET_USER_LOADING, GET_USER_LOADED, GET_USER_FAILURE, LOGIN_LOADING, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT_SUCCESS, LOGOUT_FAILURE, REGISTER_SUCCESS, REGISTER_FAILURE, REGISTER_REQUEST, GET_ALL_PRODUCTS_REQUEST } from '../redux/action-types';\nimport axios from 'axios';\nconst link = 'http://127.0.0.1:8000/api/';\nexport const setLoginModalWindow = data => ({\n  type: SET_LOGIN_MODAL_WINDOW,\n  payload: data\n});\nexport const getUser = () => (dispatch, getState) => {\n  dispatch({\n    type: GET_USER_LOADING\n  });\n  const token = getState().auth.token;\n\n  if (!token) {\n    return dispatch({\n      type: GET_USER_FAILURE\n    });\n  }\n\n  axios.post(`${link}accounts/user/`, null, {\n    headers: {\n      'Authorization': `token ${token}`\n    }\n  }).then(res => dispatch({\n    type: GET_USER_LOADED,\n    payload: res.data\n  })).catch(() => dispatch({\n    type: GET_USER_FAILURE\n  }));\n};\nexport const login = data => dispatch => {\n  dispatch({\n    type: LOGIN_LOADING\n  });\n  axios.post(`${link}accounts/login/`, data).then(res => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setLoginModalWindow(false));\n  }).catch(err => {\n    try {\n      const errors = err.response.data;\n      const errorsObj = Object.values(errors);\n      dispatch({\n        type: LOGIN_FAILURE,\n        payload: errorsObj\n      });\n    } catch (e) {}\n  });\n};\nexport const logout = () => dispatch => {\n  const token = localStorage.getItem('token');\n  axios.post(`${link}accounts/logout/`, null, {\n    headers: {\n      'Authorization': `token ${token}`\n    }\n  }).then(() => {\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  }).catch(err => {\n    const errors = err.response.data;\n    const errorsObj = Object.values(errors);\n    dispatch({\n      type: LOGOUT_FAILURE,\n      payload: errorsObj\n    });\n  });\n};\nexport const register = (data, cb) => dispatch => {\n  dispatch({\n    type: REGISTER_REQUEST\n  });\n  axios.post(`${link}accounts/register/`, data).then(res => {\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    cb();\n  }).catch(err => {\n    try {\n      const errors = err.response.data;\n      const errorsObj = Object.values(errors);\n      dispatch({\n        type: REGISTER_FAILURE,\n        payload: errorsObj\n      });\n    } catch (e) {}\n  });\n};\nexport const getAllProducts = () => dispatch => {\n  dispatch({\n    type: GET_ALL_PRODUCTS_REQUEST\n  });\n  axios.get(`${link}categories/`).then(res => {\n    console.log(res.data); // dispatch({ type: GET_ALL_PRODUCTS_SUCCESS, payload: res.data })\n  }); // .catch(err => {\n  //     try {\n  //         const errors = err.response.data;\n  //         const errorsObj = Object.values(errors);\n  //         dispatch({\n  //             type: LOGIN_FAILURE, payload: errorsObj\n  //         })\n  //     } catch (e) { }\n  // })\n};","map":{"version":3,"sources":["C:/Users/zcczz/Desktop/online_store_v2/online_store_v2/front/src/redux/actions.js"],"names":["SET_LOGIN_MODAL_WINDOW","GET_USER_LOADING","GET_USER_LOADED","GET_USER_FAILURE","LOGIN_LOADING","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_SUCCESS","LOGOUT_FAILURE","REGISTER_SUCCESS","REGISTER_FAILURE","REGISTER_REQUEST","GET_ALL_PRODUCTS_REQUEST","axios","link","setLoginModalWindow","data","type","payload","getUser","dispatch","getState","token","auth","post","headers","then","res","catch","login","err","errors","response","errorsObj","Object","values","e","logout","localStorage","getItem","register","cb","getAllProducts","get","console","log"],"mappings":"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","sourcesContent":["import {\r\n    SET_LOGIN_MODAL_WINDOW,\r\n    GET_USER_LOADING,\r\n    GET_USER_LOADED,\r\n    GET_USER_FAILURE,\r\n    LOGIN_LOADING,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAILURE,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE,\r\n    REGISTER_REQUEST,\r\n    GET_ALL_PRODUCTS_REQUEST\r\n} from '../redux/action-types';\r\nimport axios from 'axios';\r\n\r\nconst link = 'http://127.0.0.1:8000/api/';\r\n\r\nexport const setLoginModalWindow = data => ({\r\n    type: SET_LOGIN_MODAL_WINDOW, payload: data\r\n})\r\n\r\nexport const getUser = () => (dispatch, getState) => {\r\n\r\n    dispatch({ type: GET_USER_LOADING })\r\n\r\n    const token = getState().auth.token;\r\n\r\n    if (!token) {\r\n        return dispatch({ type: GET_USER_FAILURE })\r\n    }\r\n\r\n    axios.post(`${link}accounts/user/`, null, {\r\n        headers: {\r\n            'Authorization': `token ${token}`,\r\n        }\r\n    })\r\n        .then(res => dispatch({ type: GET_USER_LOADED, payload: res.data }))\r\n        .catch(() => dispatch({ type: GET_USER_FAILURE }))\r\n}\r\n\r\nexport const login = data => dispatch => {\r\n\r\n    dispatch({ type: LOGIN_LOADING })\r\n\r\n    axios.post(`${link}accounts/login/`, data)\r\n        .then(res => {\r\n            dispatch({ type: LOGIN_SUCCESS, payload: res.data })\r\n            dispatch(setLoginModalWindow(false))\r\n        })\r\n        .catch(err => {\r\n            try {\r\n                const errors = err.response.data;\r\n                const errorsObj = Object.values(errors);\r\n                dispatch({\r\n                    type: LOGIN_FAILURE, payload: errorsObj\r\n                })\r\n            } catch (e) { }\r\n        })\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n\r\n    const token = localStorage.getItem('token')\r\n\r\n    axios.post(`${link}accounts/logout/`, null, {\r\n        headers: {\r\n            'Authorization': `token ${token}`,\r\n        }\r\n    })\r\n        .then(() => {\r\n            dispatch({ type: LOGOUT_SUCCESS })\r\n        })\r\n        .catch(err => {\r\n            const errors = err.response.data;\r\n            const errorsObj = Object.values(errors);\r\n            dispatch({\r\n                type: LOGOUT_FAILURE, payload: errorsObj\r\n            })\r\n        })\r\n}\r\n\r\nexport const register = (data, cb) => dispatch => {\r\n    dispatch({ type: REGISTER_REQUEST })\r\n\r\n    axios.post(`${link}accounts/register/`, data)\r\n        .then(res => {\r\n            dispatch({ type: REGISTER_SUCCESS, payload: res.data })\r\n            cb();\r\n\r\n        })\r\n        .catch(err => {\r\n            try {\r\n                const errors = err.response.data;\r\n                const errorsObj = Object.values(errors);\r\n                dispatch({\r\n                    type: REGISTER_FAILURE, payload: errorsObj\r\n                })\r\n            } catch (e) { }\r\n        })\r\n}\r\n\r\nexport const getAllProducts = () => dispatch => {\r\n\r\n    dispatch({ type: GET_ALL_PRODUCTS_REQUEST })\r\n\r\n    axios.get(`${link}categories/`)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            // dispatch({ type: GET_ALL_PRODUCTS_SUCCESS, payload: res.data })\r\n        })\r\n        // .catch(err => {\r\n        //     try {\r\n        //         const errors = err.response.data;\r\n        //         const errorsObj = Object.values(errors);\r\n        //         dispatch({\r\n        //             type: LOGIN_FAILURE, payload: errorsObj\r\n        //         })\r\n        //     } catch (e) { }\r\n        // })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}